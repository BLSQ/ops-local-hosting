---
- hosts: iaso
  tags: setup
  become: yes
  tasks:
    - name: Create Docker clean up cron job.
      cron:
        name: "docker disk clean up"
        job: "docker system prune -af > /dev/null 2>&1"
        minute: "0"
        hour: "0"
        day: "*"
        month: "*"
        weekday: "0"
    - name: install pip3
      apt: name=python3-pip state=present update-cache=yes
    - name: Install latest passlib with pip
      pip: name=passlib
    - name: Install apache2-utils
      apt: name=apache2-utils
    - name: "create directory for traefik"
      file:
        path: "/srv/docker/traefik/traefik"
        state: directory
        recurse: yes
    - name: "deploying traefik config file"
      template:
        src: "docker/traefik/dynamic.yml"
        dest: "/srv/docker/traefik/traefik/dynamic.yml"
        force: yes
    - name: Generate passwd file for traefik
      community.general.htpasswd:
        path: "/srv/docker/traefik/.htpasswd"
        name: "{{TRAEFIK_USER}}"
        password: "{{TRAEFIK_PWD}}"
        state: present
    - name: "create directory for portainer"
      file:
        path: "/srv/docker/portainer"
        state: directory
        recurse: yes
    - name: Generate passwd file for portainer
      shell: htpasswd -nb -B {{TRAEFIK_USER}} {{TRAEFIK_PWD}} | sed -e s/\\$/\\$\\$/g | cut -d ":" -f 2 | tr -d '\n' > /srv/docker/portainer/.htpasswd
    - name: "create directory for enketo"
      file:
        path: "/srv/docker/enketo/config"
        state: directory
        recurse: yes
    - name: "deploying enketo config file"
      template:
        src: "docker/enketo/config/config.json"
        dest: "/srv/docker/enketo/config/config.json"
    - name: "create directory for enketo"
      file:
        path: "/srv/docker/enketo/build"
        state: directory
        recurse: yes
    - name: "deploying enketo build files"
      template:
        src: "docker/enketo/build/create_config.py"
        dest: "/srv/docker/enketo/build/create_config.py"
    - name: "deploying enketo build files 2"
      template:
        src: "docker/enketo/build/Dockerfile"
        dest: "/srv/docker/enketo/build/Dockerfile"
    - name: "create directory for dataviz"
      file:
        path: "/srv/docker/dataviz/config/front"
        state: directory
        recurse: yes
    - name: "deploying dataviz config file"
      template:
        src: "docker/dataviz/config/front/env.json"
        dest: "/srv/docker/dataviz/config/front/env.json"

- hosts: iaso
  tags: setup-dhis2-postgresql
  become: yes
  vars_files:
    - ../roles/postgres/vars/main.yml
  roles:
    - role: ../roles/postgres
      when: blsq_products_regexp.find('dhis2') != -1

- hosts: iaso
  become: yes
  roles:
    - ../roles/docker-compose-systemd
  vars:
    - all_docker_services:
        - name: minio
          enabled: yes
          need_restart: yes
          root_dir: /srv/docker/minio
          compose_template: docker/minio/docker-compose.yml
          env_template: docker/minio.env
          unit_template: docker-compose/compose-unit.j2
          used_by: "iaso dataviz hesabu d2d feedback-loop"
        - name: iaso
          enabled: yes
          need_restart: yes
          root_dir: /srv/docker/iaso
          compose_template: docker/iaso/docker-compose.yml
          env_template: docker/iaso.env
          unit_template: docker-compose/compose-unit.j2
          used_by: "iaso"
        - name: enketo
          enabled: yes
          need_restart: yes
          root_dir: /srv/docker/enketo
          compose_template: docker/enketo/docker-compose.yml
          env_template: docker/enketo.env
          unit_template: docker-compose/compose-unit.j2
          used_by: "iaso"
        - name: hesabu
          enabled: yes
          need_restart: yes
          root_dir: /srv/docker/hesabu
          compose_template: docker/hesabu/docker-compose.yml
          env_template: docker/hesabu.env
          unit_template: docker-compose/compose-unit.j2
          used_by: "hesabu"
        - name: dataviz
          enabled: yes
          need_restart: yes
          root_dir: /srv/docker/dataviz
          compose_template: docker/dataviz/docker-compose.yml
          env_template: docker/dataviz.env
          unit_template: docker-compose/compose-unit.j2
          used_by: "dataviz"
        - name: d2d
          enabled: yes
          need_restart: yes
          root_dir: /srv/docker/d2d
          compose_template: docker/d2d/docker-compose.yml
          env_template: docker/d2d.env
          unit_template: docker-compose/compose-unit.j2
          used_by: "d2d"
        - name: dhis2
          enabled: yes
          need_restart: yes
          root_dir: /srv/docker/dhis2
          compose_template: docker/dhis2/docker-compose.yml
          env_template: docker/dhis2.env
          unit_template: docker-compose/compose-unit.j2
          used_by: "dhis2"
        - name: feedback-loop
          enabled: yes
          need_restart: yes
          root_dir: /srv/docker/feedback-loop
          compose_template: docker/feedback-loop/docker-compose.yml
          env_template: docker/feedback-loop.env
          unit_template: docker-compose/compose-unit.j2
          used_by: "feedback-loop"
        - name: traefik
          enabled: yes
          need_restart: yes
          root_dir: /srv/docker/traefik
          compose_template: "docker/traefik/docker-compose-tls-{{TLS_ENABLED}}.yml"
          env_template: docker/traefik.env
          unit_template: docker-compose/compose-unit.j2
          used_by: "iaso dataviz hesabu d2d dhis2 feedback-loop"
        - name: netdata
          enabled: yes
          need_restart: yes
          root_dir: /srv/docker/netdata
          compose_template: docker/netdata/docker-compose.yml
          env_template: docker/netdata.env
          unit_template: docker-compose/compose-unit.j2
          used_by: "netdata"
        - name: restic
          enabled: yes
          need_restart: yes
          root_dir: /srv/docker/restic
          compose_template: docker/restic/docker-compose.yml
          env_template: docker/restic.env
          unit_template: docker-compose/compose-unit.j2
          used_by: "restic"
    - docker_services: "{{ all_docker_services | selectattr('used_by', 'match', blsq_products_regexp)}}"
