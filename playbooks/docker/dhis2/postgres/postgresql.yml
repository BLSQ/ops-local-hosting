---
- hosts: dhis2
  become: yes
  vars: 
      postgres_max_connections: 200
      postgres_shared_buffers: "{{ (((ansible_memtotal_mb/1024.0)|round|int)*0.25)|int*1024 }}MB"
      postgres_work_mem: "{{ ((((ansible_memtotal_mb/1024.0)|round|int)*0.25)/postgres_max_connections*1024)|round|int }}MB"
      postgres_maintenance_work_mem: "{{ ((ansible_memtotal_mb/1024.0)|round|int)*64 }}MB"
      postgres_effective_cache_size: "{{ (((ansible_memtotal_mb/1024.0)|round|int)*0.75)|int*1024 }}MB"
      postgres_checkpoint_completion_target: 0.8
      postgres_synchronous_commit: "off"
      postgres_wal_writer_delay: "10000ms"
      postgres_random_page_cost: 1.1
      postgres_max_locks_per_transaction: 96
      
  pre_tasks:
    - name: Install dependencies for PostgreSQL
      apt: name={{ item }} update_cache=true state=latest
      with_items:
        - bash
        - acl
        - openssl
        - libssl-dev
        - libssl-doc
        - gnupg
        - curl

    - name: Ensure locales exist                                                                                                                                                                                                                                              
      locale_gen:                                                                                                                                                                                                                                                             
        name: 'en_US.UTF-8'                                                                                                                                                                                                                                                    
        state: present  

    - name: Import the repository signing key
      apt_key: 
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present  

    - name: Add PostgreSQL 12 repository
      shell: echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" | tee  /etc/apt/sources.list.d/pgdg.list
      
    - name: Update system
      shell: apt update

    - name: "Install PostgreSQL"
      apt: name={{ item }} update_cache=yes state=present
      with_items:
        - postgresql-12
        - libpq-dev
        - python3-psycopg2
        - postgresql-12-postgis-3  
 
  tasks:
    - name: "Start and enable postgres"
      service: name=postgresql state=started enabled=yes

    - name: "Create dhis2 database"
      become_user: postgres
      postgresql_db:
        state: present
        name: "{{ DATABASE_NAME }}"
        encoding: UTF-8
        lc_collate: en_US.UTF-8
        lc_ctype: en_US.UTF-8
        conn_limit: -1
        template: template0

    - name: "Create dhis2 user"
      postgresql_user:
        state: present
        name: "{{ DATABASE_USER }}"
        password: "{{ DATABASE_PASSWORD }}"
        role_attr_flags: CREATEDB,CREATEROLE,REPLICATION,BYPASSRLS,SUPERUSER
      become_user: postgres

    - name: "GRANT all privileges to DATABASE_USER"
      postgresql_privs:
        type: database
        database: "{{ DATABASE_NAME }}"
        roles: "{{ DATABASE_USER }}"
        privs: all
      become_user: postgres

    - name: "Create postgis extention"
      postgresql_ext:
        name: postgis
        db: "{{ DATABASE_NAME }}"
      become_user: postgres
      
    - name: "ALTER dhis_db_name"
      command: psql -d {{ DATABASE_NAME }} -c "ALTER DATABASE {{ DATABASE_NAME }} SET SEARCH_PATH=PUBLIC,POSTGIS;"
      become_user: postgres

    - name: "Allow connection for all user"
      postgresql_pg_hba:
        dest: "/etc/postgresql/12/main/pg_hba.conf"
        contype: host
        databases: all
        users: all
        source: 0.0.0.0/0
        method: md5
      become_user: postgres
      notify: postgresql__restart_service

    - name: "Set postgres config"
      postgresql_set:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
      with_items:
        - {name: 'listen_addresses', value: '*'}
        - {name: 'max_connections', value: '{{postgres_max_connections}}'}
        - {name: 'shared_buffers', value: '{{postgres_shared_buffers}}'}
        - {name: 'work_mem', value: '{{postgres_work_mem}}'}
        - {name: 'maintenance_work_mem', value: '{{postgres_maintenance_work_mem}}'}
        - {name: 'effective_cache_size', value: '{{postgres_effective_cache_size}}'}
        - {name: 'checkpoint_completion_target', value: '{{postgres_checkpoint_completion_target}}'}
        - {name: 'synchronous_commit', value: '{{postgres_synchronous_commit}}'}
        - {name: 'wal_writer_delay', value: '{{postgres_wal_writer_delay}}'}
        - {name: 'random_page_cost', value: '{{postgres_random_page_cost}}'}
        - {name: 'max_locks_per_transaction', value: '{{postgres_max_locks_per_transaction}}'}
      become_user: postgres
      notify: postgresql__restart_service
    - name: debug info
      debug:
        msg: 
        - "Suggested shared_buffers: {{postgres_shared_buffers}}"
        - "Suggested work_mem: {{postgres_work_mem}}"
        - "Suggested maintenance_work_mem: {{postgres_maintenance_work_mem}}"
        - "Suggested effective_cache_size: {{postgres_effective_cache_size}}"

  handlers:
    - name: postgresql__restart_service
      service: name=postgresql state=restarted